<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<xsd:schema xmlns="http://www.angelsmasterpiece.org/schema/spring/scala/util"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:beans="http://www.springframework.org/schema/beans"
            xmlns:tool="http://www.springframework.org/schema/tool"

            targetNamespace="http://www.angelsmasterpiece.org/schema/spring/scala/util"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool" schemaLocation="http://www.springframework.org/schema/tool/spring-tool-2.0.xsd"/>

    <xsd:element name="list">
        <xsd:annotation>
            <xsd:documentation source="java:org.angelsmasterpiece.beans.factory.config.ListFactoryBean">
                Builds a Scala immutable List instance, populated with the specified content.
                If you need mutable alternative, than you can use buffer.
            </xsd:documentation>
            <xsd:appinfo>
                <tool:annotation>
                    <tool:exports type="scala.collection.immutable.List"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:listOrSetType">
                    <xsd:attribute name="id" type="xsd:ID"/>
                    <xsd:attribute name="scope" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                The scope of this collection bean: typically "singleton" (one shared instance,
                                which will be returned by all calls to getBean with the given id), or
                                "prototype" (independent instance resulting from each call to getBean).
                                Default is "singleton". Further scopes, such as "request" or "session",
                                might be supported by extended bean factories (e.g. in a web environment).
							]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="ref" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the java list bean</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="buffer">
        <xsd:annotation>
            <xsd:documentation source="java:org.angelsmasterpiece.beans.factory.config.BufferFactoryBean">
                Builds a Scala mutable Buffer instance, populated with the specified content.
                Buffer can be used as mutable equivalent to immutable list.
            </xsd:documentation>
            <xsd:appinfo>
                <tool:annotation>
                    <tool:exports type="scala.collection.mutable.Buffer"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:listOrSetType">
                    <xsd:attribute name="id" type="xsd:ID"/>
                    <xsd:attribute name="scope" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation><![CDATA[
                                The scope of this collection bean: typically "singleton" (one shared instance,
                                which will be returned by all calls to getBean with the given id), or
                                "prototype" (independent instance resulting from each call to getBean).
                                Default is "singleton". Further scopes, such as "request" or "session",
                                might be supported by extended bean factories (e.g. in a web environment).
							]]></xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="ref" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the java list bean</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="set">
		<xsd:annotation>
			<xsd:documentation source="java:org.angelsmasterpiece.beans.factory.config.SetFactoryBean">
	            Builds a Scala mutable/immutable Set instance, populated with the specified content.
			</xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="scala.collection.Set"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:listOrSetType">
					<xsd:attribute name="id" type="xsd:ID"/>
					<xsd:attribute name="mutability" type="mutabilityType" default="immutable">
                        <xsd:annotation>
                            <xsd:documentation>Weather object should be mutable or immutable</xsd:documentation>
                        </xsd:annotation>
					</xsd:attribute>
                    <xsd:attribute name="ref" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the java set bean</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
					<xsd:attribute name="scope" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
                                The scope of this collection bean: typically "singleton" (one shared instance,
                                which will be returned by all calls to getBean with the given id), or
                                "prototype" (independent instance resulting from each call to getBean).
                                Default is "singleton". Further scopes, such as "request" or "session",
                                might be supported by extended bean factories (e.g. in a web environment).
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

    <xsd:element name="map">
		<xsd:annotation>
			<xsd:documentation source="java:org.angelsmasterpiece.beans.factory.config.MapFactoryBean">
	            Builds a Scala mutable/immutable Map instance, populated with the specified content.
			</xsd:documentation>
			<xsd:appinfo>
				<tool:annotation>
					<tool:exports type="scala.collection.Map"/>
				</tool:annotation>
			</xsd:appinfo>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="beans:mapType">
					<xsd:attribute name="id" type="xsd:ID"/>
					<xsd:attribute name="mutability" type="mutabilityType" default="immutable">
                        <xsd:annotation>
                            <xsd:documentation>Weather object should be mutable or immutable</xsd:documentation>
                        </xsd:annotation>
					</xsd:attribute>
                    <xsd:attribute name="ref" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>Reference to the java map bean</xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
					<xsd:attribute name="scope" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
                                The scope of this collection bean: typically "singleton" (one shared instance,
                                which will be returned by all calls to getBean with the given id), or
                                "prototype" (independent instance resulting from each call to getBean).
                                Default is "singleton". Further scopes, such as "request" or "session",
                                might be supported by extended bean factories (e.g. in a web environment).
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

    <!-- Type definition -->

    <xsd:simpleType name="mutabilityType">
		<xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="immutable"/>
            <xsd:enumeration value="mutable"/>
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
